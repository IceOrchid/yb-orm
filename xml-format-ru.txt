
Далее кратко описан формат XML метаданных.
Смотри также примеры в папке examples.

<schema> - корневой элемент, может содержать элементы <table> и <relation>.

<table> - элемент описывает структуру таблицы, ее колонки. Имеет следующие
    	атрибуты:
    name - (обязательный) имя таблицы, как в SQL;
    sequence - (опциональный) имя генератора последовательности, который задает
            значения для первичного ключа.  Первичный ключ должен быть
            суррогатным ID.  Если этот атрибут не пустой при использовании с
            реляционной СУБД, не имеющей генераторов (напр. MySQL), то это
            означает, что значения ключа генерируются автоматически;
    class - (опциональный) имя класса, в который нужно отобразить данную
            таблицу;
    xml-name - (опциональный) имя элемента XML, используется
            механизмом AutoXMLizer, если не задан используется имя таблицы,
            приведенное к нижнему регистру, '_' заменяются на '-'.

<column> - элемент <table> содержит один или более элементов <column>, каждый
        из которых описывает одну колонку.  Он имеет следующие атрибуты:
    name - (обязательный) имя колонки, как в SQL;
    type - (обязательный) тип данных колонки, сейчас поддерживаются
            следующие типы данных:
        longint - (как минимум) 64-битное целое число, подходит для разных ID
        decimal - десятичное число с точкой, подходит для хранения денежных
                величин и т.д.
        datetime - временная метка, включает дату и время
        string - строка символов;
    size - (обязательный для типа string, иначе не используется) - максимальная
            длина значения;
    null - (опциональный) если колонке можно присвоить значение NULL, возможные
            значения - "true" и "false".  По умолчанию - "true", если не
            сказано, что колонка входит в состав первичного ключа;
    default - (опциональный) значение по умолчанию, присваиваемое колонке.
            Этот атрибут может содержать константу того типа, который задан в
            атрибуте "type", для типа "datetime" предусмотрено специальное
            значение "sysdate", обозначающее текущие время и дату;
    property - (опциональный) имя атрибута объекта, если оличается от имени
            колонки;
    xml-name - (опциональный) имя элемента XML, используется
            механизмом AutoXMLizer, если не задан используется имя колонки,
            приведенное к нижнему регистру, '_' заменяются на '-'.


Элемент <column> может содержать вложенные элементы, которые описывают
дополнительные ограничения для данной колонки:
<read-only> - колонке значение может быть присвоено лишь при создании,
        последующие попытки обновления приведут к ошибке.
<primary-key> - колонка является первичным ключом или входит в состав сложного
        первичного ключа.
<foreign-key> - колонка ссылается на другие таблицу и колонку, это называется
        ограничением внешнего ключа.  Этот элемент имеет следующие атрибуты:
    table - (обязательный) имя таблицы, на которую ведет ссылка;
    key - (опциональный) имя колонки (ключа) в таблице, на которую ведет
            ссылка, этот атрибут можно опустить, если ключ, на который
            ссылаемся, является первичным.

<relation> - элемент описывает отношения между доменными классами.
        Содержимое этого элемента зависит от типа отношения (определяется
        обязательным атрибутом "type"), который может быть одним из следующих:
        "one-to-many" | "many-to-many" | "parent-to-child".

    "one-to-many" - один-ко-многим, этот тип подразумевает два вложенных
            элемента.
        <one> - класс главной таблицы, атрибуты:
            class - (обязательный) имя класса, отображаемого на главную
                    таблицу;
            property - (опциональный) имя свойства, которое ссылается типично
                    на коллекцию зависимых объектов;
            use-list="false" - (опциональный) использовать вместо коллекции
                    одиночный объект, полезно для представления
                    отношения "один-к-одному".
        <many> - для зависимого класса, атрибуты:
            class - (обязательный) имя класса, отображаемого в зависимую
                    таблицу;
            property - (опциональный) имя свойства, которое ссылается на один
                    главный объект;
            filter - (опциональный) дополнительный фильтр для зависимых
                    записей, которые будут включены в свойство-коллекцию,
                    записан в синтаксисе SQL.
        Примечание: при удалении главного объекта, в том случае, если внешний
                ключ допускает обнуление, то у зависимых объектов ссылка на
                главный объект будет обнулена, иначе зависимые объекты будут
                также удалены.

    "many-to-many" - многие-ко-многим, этот тип подразумевает три вложенных
            элемента двух разных видов.
        <side> - одна из сторон отношения, должны быть два таких элемента
                внутри элемента <relation>.  Возможные атрибуты:
            class - (обязательный) имя класса, отображаемого в одну
                    из двух таблиц;
            property - (опциональный) имя созданного свойства, ссылающегося
                    на другую сторону отношения как на контейнер объектов.
        <link> - укажите имя таблицы связи, она должна иметь внешние ключи,
                ссылающиеся на обе связанные таблицы.  Единственный атрибут:
            table - (обязательный) имя таблицы связи.
        Примечание: таблица связи типично не отображается явно
                ни на один класс.

    "parent-to-child" - родитель-потомок, этот тип подразумевает два вложенных
            элемента.
        <parent> - более общий класс с меньшим количеством свойств. 
                Возможные атрибуты:
            class - (обязательный) имя класса, отображаемого на родительскую
                    таблицу.
            discr-column - (обязательный для самых верхних классов в иерархии)
                    колонка-дискриминант, экземпляры (строки) разных классов
                    должны иметь различные значения дискриминанта.  Если
                    атрибут опущен, ищите его значение в родительских классах.
        <child> - более конкретный класс с большим количеством свойств. 
                Возможные атрибуты:
            class - (обязательный) имя класса, отображаемого на дочернюю
                    таблицу;
            discr-value - (обязательный для конкретных классов) абстрактные
                    классы не могут иметь значение discr-value, и поэтому
                    не могут иметь экземпляров.
        Примечание: если <parent> или <child> ссылаются на класс, не упомянутый
                ни в одной таблице, то будет создан новый класс, отображаемый
                на ту же таблицу, что и его класс-родитель.

<!-- vim:ts=4:sts=4:sw=4:et:
-->
